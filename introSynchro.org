#+TITLE: Introduction aux synchronisations et autres casses-têtes
#+DATE: <2014-08-04 lun.>
#+AUTHOR: Grégory Mounié
#+EMAIL: Gregory.Mounie@imag.fr
#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+OPTIONS: author:t c:nil creator:comment d:(not "LOGBOOK") date:t
#+OPTIONS: e:t email:nil f:t inline:t num:t p:nil pri:nil stat:t
#+OPTIONS: tags:t tasks:t tex:t timestamp:t toc:t todo:t |:t
#+CREATOR: Emacs 24.3.1 (Org mode 8.2.7b)
#+DESCRIPTION: Exercices, codes et idées pour comprendre et faire comprendre les synchronisations.
#+EXCLUDE_TAGS: noexport
#+KEYWORDS:
#+LANGUAGE: fr
#+SELECT_TAGS: export

#+OPTIONS: html-link-use-abs-url:nil html-postamble:auto
#+OPTIONS: html-preamble:t html-scripts:t html-style:t
#+OPTIONS: html5-fancy:nil tex:t
#+CREATOR: <a href="http://www.gnu.org/software/emacs/">Emacs</a> 24.3.1 (<a href="http://orgmode.org">Org</a> mode 8.2.7b)
#+HTML_CONTAINER: div
#+HTML_DOCTYPE: xhtml-strict
#+HTML_HEAD:
#+HTML_HEAD_EXTRA:
#+HTML_LINK_HOME:
#+HTML_LINK_UP:
#+HTML_MATHJAX:
#+INFOJS_OPT:
#+LATEX_HEADER:

#+OPTIONS: texht:t
#+LATEX_CLASS: book
#+LATEX_CLASS_OPTIONS:
#+LATEX_HEADER:
#+LATEX_HEADER_EXTRA:


* Introduction, motivation, contenu et pré-requis

** Fondamentaux

*** Buts de ce document

    Le but de ce document est de regrouper des exercices, du code et des
    idées pour comprendre et faire comprendre les synchronisations
    utilisés dans les programmes parallèles modernes.
    
    Comme la langue influence la pensée, les exemples sont volontairement
    dans plusieurs langages de programmation.

*** L'informatique consiste à faire faire des choses intelligentes à une grosse machine rapide ne sachant faire que des choses élémentaires stupides.

   Un ordinateur est une machine stupide [Gerard Berry], elle ne
   connaît que les 4 opérations en base 0 et 1. Mais elle a une
   capacité stockage d'information gigantesque, la capacité d'un
   disque dur est de l'ordre de la masse solaire de notre
   galaxie. Elle est aussi rapide, puisque pendant une opération à
   4Ghz, un photon parcourt 7.5cm dans le vide.

   Il y a 4 grands pans complémentaires à la discipline:
    - matériel :: comment construire cette machine à calcul programmable
    - algorithmique :: exprimer une tâche intelligente pouvant être
                       traduite en opération stupide. Évaluer la
                       performance de la tâche en fonction de la
                       quantité d'opérations stupides nécéssaire pour
                       la faire.
    - compilation :: traduire une tâche avec un langage précis dans
                     les instructions élémentaires du matériel.
    - données :: l'art de manipuler des données utilisé par les trois
                 pans précédents.
    
    Le parallélisme, c'est l'art de faire plusieurs choses stupides en même
    temps et cela à un impact sur les 4 pans.

    - matériel :: comment construire cette machine stupide faisant
                  plusieurs choses à la fois
    - algorithmique :: comment découper une tâche intelligente en
                       plusieurs morceaux que l'on peut réaliser
                       simultanément.
    - compilation :: traduire des opérateurs parallèle de haut-niveau
                     en instruction élémentaires s'exécutant parallèles
    - données :: l'art de manipuler des données à plusieurs.

** Résumé de la suite
   La suite du document aborde les aspects suivants:
   - Comment faire plusieurs choses en même temps dans [[Faire plusieurs
     choses à la fois]]: lancement des activités parallèles dans
     différents langages. Les points communs montrent bien les aspects
     centraux. Les nuances mettent en lumière certains choix cachés
     mais importants.
   - Comment faire la même chose en même temps à plusieurs dans [[Faire
     la même chose à plusieurs en même temps]]: 
   - Comment communiquer à plusieurs [[ Transmettre des données]]

* Faire plusieurs choses à la fois

#+INCLUDE: parallelisme.org

* Faire la même chose à plusieurs en même temps

#+INCLUDE: incrementation.org

* Transmettre des données

#+INCLUDE: asyncdata.org

* Les moniteurs

* Les sémaphores

* Les opérateurs de haut-niveaux (C++, Java)

* Le select gardé (Ada, Go)

* Erlang

* Les opérations atomiques

* Les futex

* Les Windows threads
  expliquer les nuances, comme les fibres (fiber).
* Autres idées
