#+TITLE: Introduction aux synchronisations et autres casses-têtes
#+DATE: <2014-08-04 lun.>
#+AUTHOR: Grégory Mounié
#+EMAIL: Gregory.Mounie@imag.fr
#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+OPTIONS: author:t c:nil creator:comment d:(not "LOGBOOK") date:t
#+OPTIONS: e:t email:nil f:t inline:t num:t p:nil pri:nil stat:t
#+OPTIONS: tags:t tasks:t tex:t timestamp:t toc:t todo:t |:t
#+CREATOR: Emacs 24.3.1 (Org mode 8.2.7b)
#+DESCRIPTION: Exercices, codes et idées pour comprendre et faire comprendre les synchronisations.
#+EXCLUDE_TAGS: noexport
#+KEYWORDS:
#+LANGUAGE: fr
#+SELECT_TAGS: export

#+OPTIONS: html-link-use-abs-url:nil html-postamble:auto
#+OPTIONS: html-preamble:t html-scripts:t html-style:t
#+OPTIONS: html5-fancy:nil tex:t
#+CREATOR: <a href="http://www.gnu.org/software/emacs/">Emacs</a> 24.3.1 (<a href="http://orgmode.org">Org</a> mode 8.2.7b)
#+HTML_CONTAINER: div
#+HTML_DOCTYPE: xhtml-strict
#+HTML_HEAD:
#+HTML_HEAD_EXTRA:
#+HTML_LINK_HOME:
#+HTML_LINK_UP:
#+HTML_MATHJAX:
#+INFOJS_OPT:
#+LATEX_HEADER:

#+OPTIONS: texht:t
#+LATEX_CLASS: book
#+LATEX_CLASS_OPTIONS:
#+LATEX_HEADER:
#+LATEX_HEADER_EXTRA:


* Motivation, contenu et pré-requis

Le but est ici de regrouper des exercices, du code et des idées pour
comprendre et faire comprendre les synchronisations utilisés dans les
programmes parallèles modernes.

Comme la langue influence la pensée, les exemples sont volontairement
en plusieurs langages.

** Pré-requis

Un ordinateur est une machine stupide [Gerard Berry], elle connait les
4 opération en base 0 et 1, mais avec une capacité stockage
d'information gigantesque, la capacité d'un disque dur est de l'odre
de la masse solaire de notre galaxie, et rapide, puisque pendant une
opération à 4Ghz, un photon parcourt 7.5cm.

L'informatique consiste donc à faire faire des choses intelligentes à
une machine ne sachant faire que des choses élémentaires stupides.

Pour cela, il y a 4 grands pans complémentaires à la discipline:
- matériel :: comment construire cette machine stupide
- algorithmique :: comment faire une chose intelligente de manière
                   indépendante du matériel, mais évaluer sa
                   performance en fonction du matériel
- compilation :: traduire un langage précis, utilisé pour instancier
                 un algorithme, dans les instructions élémentaires du
                 matériel.
- données :: l'art de manipuler des données est utilisé par les trois
             pans précédents.

Le parallélisme, c'est l'art de faire plusieurs choses stupides en même
temps et cela à un impact sur les 4 pans.

* Faire plusieurs choses à la fois

#+INCLUDE: parallelisme.org

* Faire la même chose à plusieurs

#+INCLUDE: incrementation.org

* transmettre des données

#+INCLUDE: asyncdata.org

* Les moniteurs

* Les sémaphores

* Les opérateurs de haut-niveaux (C++, Java)

* Le select gardé (Ada, Go)

* Erlang

* Les opérations atomiques

* Les futex

* Les Windows threads
  expliquer les nuances, comme les fibres (fiber).
* Autres idées
